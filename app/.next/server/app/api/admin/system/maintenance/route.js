(()=>{var e={};e.id=97,e.ids=[97],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},16677:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>y,routeModule:()=>m,serverHooks:()=>w,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>g});var s={};r.r(s),r.d(s,{POST:()=>p,dynamic:()=>d});var n=r(54899),i=r(85420),o=r(22403),a=r(44917),u=r(62686),l=r(62258),c=r(96330);let d="force-dynamic";async function p(e){try{await (0,l.oC)([c.Role.SUPER_ADMIN]),console.log("\uD83D\uDD27 [ADMIN] Starting database maintenance...");let e=await u.z.userSession.deleteMany({where:{expiresAt:{lt:new Date}}});console.log(`🗑️ [ADMIN] Cleaned up ${e.count} expired sessions`);let t=new Date;t.setDate(t.getDate()-30);let r=await u.z.notification.deleteMany({where:{createdAt:{lt:t},isRead:!0}});return console.log(`🗑️ [ADMIN] Cleaned up ${r.count} old notifications`),console.log("\uD83D\uDCCA [ADMIN] Updating analytics cache..."),await new Promise(e=>setTimeout(e,2e3)),console.log("✅ [ADMIN] Database maintenance completed successfully"),a.NextResponse.json({message:"Database maintenance completed successfully",results:{expiredSessionsRemoved:e.count,oldNotificationsRemoved:r.count,analyticsUpdated:!0},timestamp:new Date().toISOString()})}catch(e){return console.error("Database maintenance error:",e),a.NextResponse.json({error:"Failed to run database maintenance"},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/admin/system/maintenance/route",pathname:"/api/admin/system/maintenance",filename:"route",bundlePath:"app/api/admin/system/maintenance/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system-production/app/app/api/admin/system/maintenance/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:g,serverHooks:w}=m;function y(){return(0,o.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:g})}},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},43331:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},62258:(e,t,r)=>{"use strict";r.d(t,{BE:()=>d,Er:()=>c,Ht:()=>m,jw:()=>p,l4:()=>g,oC:()=>f});var s=r(29657),n=r.n(s),i=r(3197),o=r.n(i),a=r(24883),u=r(62686);let l=process.env.JWT_SECRET||"sully-booking-system-secret-key";async function c(e){return n().hash(e,12)}async function d(e,t){return n().compare(e,t)}async function p(e){var t;let r=(t={userId:e},o().sign(t,l,{expiresIn:"7d"})),s=new Date;return s.setDate(s.getDate()+7),await u.z.userSession.create({data:{userId:e,token:r,expiresAt:s}}),r}async function m(){console.log("\uD83D\uDD35 [AUTH-LIB] Getting session");try{let e=(0,a.UL)(),t=e.get("auth-token")?.value;if(console.log("\uD83D\uDD35 [AUTH-LIB] Token from cookies:",t?`Token found (${t.substring(0,20)}...)`:"No token found"),!t)return console.log("\uD83D\uDD35 [AUTH-LIB] No auth token found in cookies"),null;console.log("\uD83D\uDD35 [AUTH-LIB] Looking up session in database");let r=await u.z.userSession.findUnique({where:{token:t},include:{user:!0}});if(!r)return console.log("\uD83D\uDD34 [AUTH-LIB] No session found in database for token"),null;if(console.log("\uD83D\uDD35 [AUTH-LIB] Session found, checking expiration"),r.expiresAt<new Date)return console.log("\uD83D\uDD34 [AUTH-LIB] Session expired, deleting"),await u.z.userSession.delete({where:{id:r.id}}),null;return console.log("\uD83D\uDFE2 [AUTH-LIB] Valid session found for user:",r.user.email),{id:r.user.id,email:r.user.email,firstName:r.user.firstName,lastName:r.user.lastName,role:r.user.role,isActive:r.user.isActive}}catch(e){return console.error("\uD83D\uDD34 [AUTH-LIB] Session error:",e),console.error("\uD83D\uDD34 [AUTH-LIB] Error stack:",e?.stack),null}}async function f(e){let t=await m();if(!t)throw Error("Authentication required");if(!t.isActive)throw Error("Account is inactive");if(e&&!e.includes(t.role))throw Error("Insufficient permissions");return t}async function g(e){try{let t=e.cookies.get("auth-token")?.value;if(!t)return null;let r=await u.z.userSession.findUnique({where:{token:t},include:{user:!0}});if(!r)return null;if(r.expiresAt<new Date)return await u.z.userSession.delete({where:{id:r.id}}),null;if(!r.user.isActive)return null;return{id:r.user.id,email:r.user.email,firstName:r.user.firstName,lastName:r.user.lastName,role:r.user.role,isActive:r.user.isActive}}catch(e){return console.error("Error getting user from token:",e),null}}},62686:(e,t,r)=>{"use strict";r.d(t,{z:()=>n});var s=r(96330);let n=globalThis.prisma??new s.PrismaClient},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},67307:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},96330:e=>{"use strict";e.exports=require("@prisma/client")}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4055,534,6823],()=>r(16677));module.exports=s})();