"use strict";(()=>{var e={};e.id=5349,e.ids=[5349],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},48540:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>w,patchFetch:()=>E,requestAsyncStorage:()=>v,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>A});var r={};a.r(r),a.d(r,{GET:()=>f,dynamic:()=>m});var n=a(49303),s=a(88716),i=a(60670),o=a(87070),u=a(53524);class c{formatMessage(e,t,a){let r=new Date().toISOString(),n=a?` | Context: ${JSON.stringify(a)}`:"";return`[${r}] ${e.toUpperCase()}: ${t}${n}`}info(e,t){console.log(this.formatMessage("info",e,t))}error(e,t,a){let r={...a,error:t instanceof Error?{message:t.message,stack:t.stack,name:t.name}:t};console.error(this.formatMessage("error",e,r))}warn(e,t){console.warn(this.formatMessage("warn",e,t))}debug(e,t){}}let d=new c,l=globalThis.prisma??function(){if(d.info("Initializing Prisma client",{nodeEnv:"production",hasDatabaseUrl:!!process.env.DATABASE_URL,databaseUrlLength:process.env.DATABASE_URL?.length||0}),!process.env.DATABASE_URL)throw d.error("DATABASE_URL environment variable is not set"),Error("DATABASE_URL environment variable is required");return new u.PrismaClient({log:["error","warn"],errorFormat:"pretty"})}();async function p(e,t=3,a="database operation"){let r=null;for(let n=1;n<=t;n++)try{d.debug(`Attempting ${a}`,{attempt:n,maxRetries:t});let r=await e();return n>1&&d.info(`${a} succeeded on retry`,{attempt:n}),r}catch(e){if(r=e instanceof Error?e:Error(String(e)),d.warn(`${a} failed on attempt ${n}`,{attempt:n,maxRetries:t,error:r.message}),r.message.includes("authentication failed")||r.message.includes("database")&&r.message.includes("does not exist")||r.message.includes("Environment variable not found"))throw d.error(`${a} failed with non-retryable error`,r),r;if(n<t){let e=1e3*Math.pow(2,n-1);d.debug(`Waiting ${e}ms before retry`),await new Promise(t=>setTimeout(t,e))}}throw d.error(`${a} failed after ${t} attempts`,r),r}process.on("beforeExit",async()=>{d.info("Application shutting down, disconnecting from database..."),await l.$disconnect()}),process.on("SIGINT",async()=>{d.info("Received SIGINT, disconnecting from database..."),await l.$disconnect(),process.exit(0)}),process.on("SIGTERM",async()=>{d.info("Received SIGTERM, disconnecting from database..."),await l.$disconnect(),process.exit(0)});let m="force-dynamic";async function f(){let e=Date.now();try{d.info("Featured venues API called");let t=await p(async()=>await l.venue.findMany({where:{featured:!0,isActive:!0},select:{id:!0,name:!0,slug:!0,description:!0,address:!0,city:!0,postcode:!0,phone:!0,email:!0,website:!0,cuisine:!0,venueType:!0,headerImageUrl:!0,isActive:!0,featured:!0,capacity:!0,branding:!0,images:{select:{id:!0,url:!0,alt:!0},where:{isActive:!0},orderBy:{displayOrder:"asc"}},owner:{select:{firstName:!0,lastName:!0}}},orderBy:{updatedAt:"desc"},take:3}),3,"fetch featured venues"),a=Date.now()-e;return d.info("Featured venues fetched successfully",{count:t.length,duration:`${a}ms`}),o.NextResponse.json({success:!0,data:t,meta:{count:t.length,duration:a,timestamp:new Date().toISOString()}})}catch(n){let t=Date.now()-e;d.error("Error fetching featured venues",n,{duration:`${t}ms`,endpoint:"/api/venues/featured"});let a="Failed to fetch featured venues",r="INTERNAL_SERVER_ERROR";return n instanceof Error&&(n.message.includes("ENOTFOUND")?(r="DATABASE_CONNECTION_FAILED",a="Unable to connect to database"):n.message.includes("authentication failed")?(r="DATABASE_AUTH_FAILED",a="Database authentication failed"):n.message.includes("timeout")?(r="DATABASE_TIMEOUT",a="Database query timed out"):n.message.includes("Environment variable not found")&&(r="MISSING_DATABASE_URL",a="Database configuration missing")),o.NextResponse.json({success:!1,error:{type:r,message:a,details:void 0},meta:{duration:t,timestamp:new Date().toISOString(),endpoint:"/api/venues/featured"}},{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/venues/featured/route",pathname:"/api/venues/featured",filename:"route",bundlePath:"app/api/venues/featured/route"},resolvedPagePath:"/home/ubuntu/sully-booking-system-v2/app/app/api/venues/featured/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:v,staticGenerationAsyncStorage:A,serverHooks:h}=g,w="/api/venues/featured/route";function E(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:A})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[9276,5972],()=>a(48540));module.exports=r})();